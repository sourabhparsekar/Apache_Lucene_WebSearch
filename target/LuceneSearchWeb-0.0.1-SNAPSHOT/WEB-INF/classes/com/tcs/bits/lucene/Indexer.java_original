package com.tcs.bits.lucene;

import java.io.File;
import java.io.FileFilter;
import java.io.FileReader;
import java.io.IOException;

import org.apache.lucene.analysis.standard.StandardAnalyzer;
import org.apache.lucene.document.Document;
import org.apache.lucene.document.StoredField;
import org.apache.lucene.document.TextField;
import org.apache.lucene.index.IndexWriter;
import org.apache.lucene.index.IndexWriterConfig;
import org.apache.lucene.store.Directory;
import org.apache.lucene.store.FSDirectory;

public class Indexer 
{
	private IndexWriter writer;

	public static void main(String[] args) throws Exception 
	{
		String indexDir = "C:\\temp\\lucene\\index"; 	//CREATE INDEX DIRECTORY
		String dataDir = "C:\\temp\\lucene\\file";	//INPUT FILES DIRECTORY

		long start = System.currentTimeMillis();
		Indexer indexer = new Indexer(indexDir);
		int numIndexed;

		try 
		{
			numIndexed = indexer.index(dataDir, new TextFilesFilter());
		} 
		finally 
		{
			indexer.close();
		}

		long end = System.currentTimeMillis();
		System.out.println("Indexing " + numIndexed + " files took " + (end - start) + " milliseconds");
	}

	public Indexer(String indexDir) throws IOException 
	{
		Directory dir = FSDirectory.open((new File(indexDir)).toPath());
		StandardAnalyzer analyzer = new StandardAnalyzer();
		IndexWriterConfig config = new IndexWriterConfig(analyzer);
		writer = new IndexWriter(dir, config);		//LUCENE INDEX WRITER
	}

	public void close() throws IOException 
	{
		writer.close();					//CLOSE INDEX WRITER
	}

	public int index(String dataDir, FileFilter filter) throws Exception 
	{
		File[] files = new File(dataDir).listFiles();
		for (File f : files) 
		{
			if (!f.isDirectory() && !f.isHidden() && f.exists() && f.canRead()
					&& (filter == null || filter.accept(f))) 
			{
				indexFile(f);
			}
		}
		return writer.numDocs();				//RETURN NO OF DOCS INDEXED
	}

	private Document getDocument(File f) throws Exception 
	{
		Document doc = new Document();	
		doc.add(new TextField("contents", new FileReader(f)));	//INDEX FILE CONTENT
		doc.add(new StoredField("filename", f.getName()));		//INDEX FILENAME
		doc.add(new StoredField("fullpath", f.getCanonicalPath()));//INDEX FILE FULL PATH
		return doc;
	}

	private void indexFile(File f) throws Exception 
	{
		System.out.println("Indexing " + f.getCanonicalPath());
		Document doc = getDocument(f);
		writer.addDocument(doc);				//ADD DOCUMENT TO LUCENE INDEX
	}

	private static class TextFilesFilter implements FileFilter 
	{
		public boolean accept(File path) 
		{							//INDEX ONLY .TXT USING FILTER
			return path.getName().toLowerCase().endsWith(".txt");
		}
	}


}
